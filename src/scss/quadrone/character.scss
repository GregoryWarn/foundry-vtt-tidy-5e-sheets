.tidy5e-sheet.application:where(.quadrone.character) {
  --sidebar-expanded-width: 15.75rem; // I just picked a value for now while prototyping.
  // --header-image: url(../../modules/tidy5e-sheet/images/background-character.webp);
  --header-shadow: 0 0 8px rgba(0, 0, 0, 0.64);

  background: var(--t5e-theme-color-default);
  display: flex;
  flex-direction: column;
  flex: 1;
  min-width: 700px;
  container-name: character-sheet;
  container-type: inline-size;

  ::selection {
    background-color: var(--t5e-theme-color-default);
  }

  &::before {
    background: url(../../modules/tidy5e-sheet/images/banner-character.webp) top center / auto no-repeat;
    filter: grayscale(100%);
    mix-blend-mode: overlay;
    background-size: cover;
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    z-index: -2;
    width: 100%;
    height: 300px;
  }

  &::after {
    background: linear-gradient(to bottom, rgba(159, 146, 117, 0.25), rgba(127, 110, 69, 0.5));
    mix-blend-mode: overlay;
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    width: 100%;
    height: 100%;
    max-height: 200px; // TODO: Delete and use a wrapper around the header bar and sheet header.
  }

  .window-content {
    display: flex;
    flex-direction: column;
    padding: 0;
    margin-top: -0.5rem;

    .tabs-row {
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;

      >.sidebar-toggle {
        position: absolute;
        left: 0;
        padding: 0;
        column-gap: var(--t5e-size-1);

        >i {
          color: var(--t5e-color-icon-diminished);
        }

        &:hover>i {
          color: var(--t5e-color-icon-default);
        }
      }

      >.tidy-tabs {}
    }

    .sheet-body {
      display: flex;
      flex: 1;
      flex-direction: row;
      overflow-x: hidden;
      overflow-y: hidden;
      position: relative;
      z-index: 0;

      background-color: var(--t5e-component-card-default);
      background-image: url(../../modules/tidy5e-sheet/images/parchment-texture-bottom.webp);
      background-position: bottom center;
      background-repeat: no-repeat;

      &::before {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        z-index: -1;
        background-image: url(../../modules/tidy5e-sheet/images/parchment-texture-top.webp);
        background-position: top center;
        background-repeat: no-repeat;
      }
    }

    .main-content {
      display: flex;
      flex: 1;
      flex-direction: row;
      overflow-x: hidden;
      overflow-y: auto;
      padding: var(--t5e-size-3x) var(--t5e-size-4x);


      &::after {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        z-index: -1;
      }


      >.sidebar {
        flex-basis: var(--sidebar-expanded-width);
        gap: var(--t5e-size-3x);
        margin-inline-end: var(--t5e-size-4x);
        margin-inline-start: calc((var(--sidebar-expanded-width) + var(--t5e-size-4x)) * -1);
        //overflow-x: clip; // TODO: Confirm that we need this. removed for hover state.
        transition: margin var(--t5e-transition-default);

        &.expanded {
          margin-inline-start: 0;
          margin-inline-end: var(--t5e-size-6x);
          max-width: var(--sidebar-expanded-width);
        }
      }

      .sidebar-tab-contents {
        gap: var(--t5e-size-4x);
        padding-bottom: var(--t5e-size-6x);
      }

      .sidebar-tab-strip {
        .tab-option {
          flex: 1;
        }
      }

      >.tidy-tab {
        flex: 1;
        container-type: inline-size;
      }
    }
  }

  .main-content {}

  .sheet-header {
    --header-padding: 1rem;

    // All of the sheet header stuff goes in here
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.65));
    border-bottom: 1px solid var(--t5e-color-gold);

    // container-type: inline-size;
    display: flex;
    flex-direction: column;
    align-content: flex-start;
    padding: 0 var(--t5e-size-2x);
    gap: var(--t5e-size-2x);

    .sheet-header-content {
      flex-direction: row-reverse;
      flex-wrap: nowrap;
      justify-content: flex-end;
    }


    .button-config {
      color: var(--t5e-color-icon-button);

      &.button-icon-only.button-borderless:hover {
        background-color: transparent;
      }
    }




    .character-details {
      &-name-row {
        display: flex;
        flex-direction: row;

      }

      &-subtitle-row {
        display: flex;
        flex-direction: row;
        align-items: flex-end;
      }
    }

    .character-vitals-container {
      display: block;
      margin-left: var(--t5e-size-2x);
      margin-bottom: auto;
      position: relative;
      padding-bottom: 2rem;
      max-width: 11.25rem;

      &:has(.round),
      &:has(.transparent) {
        // margin-top: -8px;
      }


      .button {
        border-radius: 0;
      }


      .character-image {
        --inset: 5px;
        min-width: 10rem;
        max-height: 11.25rem;
        max-width: 11.25rem;
        background-position: center;
        width: 100%;
        box-shadow: var(--t5e-box-shadow-default);
        overflow: hidden;

        img {
          width: 100%;
          height: 100%;
          object-fit: cover;
          border: none;
          display: block;

        }

        &::before {
          content: '';
          position: absolute;
          top: var(--inset);
          left: var(--inset);
          right: var(--inset);
          bottom: var(--inset);
          border-color: var(--t5e-color-gold);
          border-style: solid;
          pointer-events: none;
          transition: border-color var(--t5e-transition-default);
        }

        &:hover::before {
          border-color: var(--t5e-color-palette-gold-75);
        }


        &.round {
          border-radius: 100%;
          box-shadow: var(--header-shadow);
          overflow: hidden;
          position: relative;

          &::before {
            border-radius: 100%;
            border: 1.5px solid var(--t5e-color-gold);
          }
        }

        &.square {
          padding: var(--t5e-size-1x);
          box-shadow: var(--header-shadow);
          --inset: 9px;

          &::before {
            border-width: 1px;
          }
        }

        &.transparent {

          &::before {
            border-radius: 100%;
            border-width: 2px;
            z-index: -1;
          }
        }

        &.dead {
          &:not(.transparent) {
            background-color: var(--t5e-component-card-dark-darker);
          }

          .dead-overlay {
            pointer-events: none;

            // &::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: var(--t5e-color-palette-red-100);
            opacity: 0.6;
            mix-blend-mode: multiply;

            &::after {
              content: '';
              position: absolute;
              top: 0;
              left: 0;
              right: 0;
              bottom: 0;
              background-color: var(--t5e-color-gold);
              opacity: 0.2;
              mix-blend-mode: lighten;
            }
          }

          img {
            z-index: -1;
          }

          &.transparent img {
            filter: grayscale(75%);
            opacity: 0.75;
          }

          &.round {
            .dead-overlay {
              border-radius: 100%;
            }
          }
        }
      }

      .death-saves-overlay {
        // TODO: Somehow move this to the component to load on-demand only? The css doesn't quite work when I try it right now.
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: var(--t5e-size-8x);

        pointer-events: none;

        >* {
          pointer-events: all;
        }

        :where(.successes, .failures) button {
          cursor: pointer;
          border-radius: 100%;
          border: 2px solid var(--t5e-color-gold);
          background-color: var(--t5e-component-card-dark-darker);
          height: 1.5rem;
          min-height: 1.5rem;
          position: relative;
          transition: all var(--t5e-transition-default);
          width: 1.5rem;

          display: flex;
          align-items: center;
          justify-content: center;

          i {
            font-size: var(--font-size-12);
            color: var(--t5e-color-text-gold);
            font-weight: 500;
            transition: all var(--t5e-transition-default);
          }

          &.checked i {
            font-weight: 900;
          }

          &:hover {
            box-shadow: 0 0 5px var(--t5e-color-gold);
          }
        }

        .successes,
        .failures {
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
          gap: 0.25rem;
          flex-direction: column-reverse;
        }

        &:hover .death-save-roll-button {
          opacity: 1;
        }

        .death-save-roll-button {
          --size: 3.5rem;
          position: absolute;
          font-weight: 900;

          display: flex;
          align-items: center;
          justify-self: center;
          opacity: 0;
          text-align: center;
          top: 50%;
          left: 50%;
          transform: translateY(-50%) translateX(-50%);
          text-shadow: 0 0 16px rgba(0, 0, 0, 0.72);
          // transition: all var(--t5e-transition-default);
          // border-radius: 100%;
          // border: 2px solid var(--t5e-color-gold);
          // background-color: var(--t5e-component-card-dark-darker);

          &:hover {
            background: none;

            i {
              color: var(--t5e-color-palette-gold-89);
            }
          }

          i {
            position: relative;
            font-size: 3rem;
            color: var(--t5e-color-palette-gold-75);
          }
        }

        .successes {
          right: 0;

          .button:hover {
            box-shadow: 0 0 8px var(--t5e-color-gold);
          }

          .checked {
            border-color: var(--t5e-color-palette-gold-62);
            background-color: var(--t5e-color-palette-gold-45);

            i {
              color: var(--t5e-color-text-default);
              text-shadow: 0 0 8px rgba(0, 0, 0, 0.24);
            }
          }
        }

        .failures {
          left: 0;

          i {
            margin-bottom: 1px;
          }

          .button:hover {
            box-shadow: 0 0 8px var(--t5e-color-palette-red-100);
          }

          .checked {
            border-color: var(--t5e-color-palette-gold-62);
            background-color: var(--t5e-color-palette-red-60);

            i {
              color: var(--t5e-color-text-default);
              text-shadow: 0 0 8px rgba(0, 0, 0, 0.24);
            }

            &:hover {
              i {
                color: var(--t5e-color-text-default);
              }
            }
          }
        }
      }

      .character-vitals {
        margin-top: -1.5rem;
        border-radius: 2px;
        border: 2px solid var(--t5e-color-gold);
        background-color: var(--t5e-component-card-dark-darker);
        box-shadow: var(--header-shadow);
        position: absolute;
        width: 100%;

        .meter {
          background-color: var(--t5e-color-component-card-dark-darker);
          border: none;
          border-radius: 0;
        }

        .hit-points {
          height: var(--t5e-field-size-default);

          input[type="text"] {
            text-align: left;
            font-size: var(--font-size-18);
            padding-left: var(--t5e-size-2x);
            background-color: var(--t5e-color-hp-dark);
            border: 2px solid var(--t5e-color-hp-medium);
            caret-color: #ffffff;
          }

          .label {
            font-size: var(--font-size-18);
            transition: all var(--t5e-transition-default);
            justify-content: flex-start;

            &:hover {
              text-shadow: 0 0 5px var(--t5e-color-text-gold-emphasis);
            }

            &:focus,
            &:active {
              background-color: inherit;
              border: none;
              outline: none;
            }
          }

        }

        .hp-row {
          position: relative;

          .hit-points {
            flex: 1;
          }

          .button {
            &:not(.editMode) {
              position: absolute;
              right: 0;
            }

            flex: 0 1 auto;

            i {
              font-size: var(--font-size-14);
              margin-bottom: 1px;
              margin-left: 1px;
            }

            &:hover {
              background-color: var(--t5e-color-hp-temp-dark);
            }
          }

          .button-config {
            border-radius: 0;
            background-color: var(--t5e-color-hp-dark);

            &:hover {
              background-color: var(--t5e-color-hp-dark);
            }
          }

          .temp-hp {
            height: 28px;

            display: flex;
            flex: 0 1 auto;
            align-items: center;
            justify-content: center;
            padding: 0 8px;
            transition: all var(--t5e-transition-default);

            &.label {
              background-color: var(--t5e-color-hp-temp);
              border-left: 1px dashed var(--t5e-color-palette-white);
            }

            &.label:hover {
              background-color: var(--t5e-color-hp-temp-dark);
            }
          }
        }

        input[type="text"].hp-temp-input {
          background-color: var(--t5e-color-hp-temp-dark);
          border-color: var(--t5e-color-hp-temp);
          font: var(--t5e-font-label-large);
          outline: none;
          position: relative;
          text-align: right;
        }

        ::selection {
          padding: 0 var(--t5e-size-1x);
          color: var(--t5e-color-text-default);
          background-color: rgba(0, 0, 0, 0.5);
        }

        .character-vitals-row {
          border-top: 2px solid var(--t5e-color-gold);
          box-sizing: content-box;
          padding: 0;
          height: var(--t5e-size-6x);
          display: flex;
          flex: 1;
          flex-direction: row;
          align-items: center;
          justify-content: center;
          gap: var(--t5e-size-halfx);
          position: relative;

          .label {
            font-size: var(--font-size-14);
            line-height: var(--line-height-16);
          }

          >*:not(:first-child) {
            position: relative;
          }

          >*:not(:first-child)::before {
            content: '';
            position: absolute;
            left: -2px;
            top: 50%;
            transform: translateY(-50%);
            height: calc(100% + 2px);
            width: 2px;
            background-color: var(--t5e-color-gold);
          }

          .exhaustion {
            width: auto;

            .button {
              padding: 0 0 0 1px;
              width: 1.5rem;

              i {
                color: var(--t5e-color-palette-gold-89);
              }
            }

            .value {
              display: none;
            }

            &.exhausted {
              background-color: var(--t5e-color-palette-orange-40);

              i,
              .value {
                color: var(--t5e-color-icon-default);
                text-shadow: 0 0 8px var(--t5e-color-palette-orange-100);
              }

              .button {
                padding: 0 0.25rem 1px 0.5rem;
                width: auto;
              }

              .value {
                display: initial;
              }
            }
          }

          .death-saves {
            i {
              color: var(--t5e-color-palette-gold-89);
            }

            &.dying {
              background-color: var(--t5e-color-palette-red-45);

              i {
                color: var(--t5e-color-icon-default);
                text-shadow: 0 0 8px var(--t5e-color-palette-red-100);
              }

              .button:hover {
                background-color: var(--t5e-color-palette-red-27);
              }
            }
          }

          .button {
            border-left: none;
            border-radius: 0;
            box-sizing: border-box;
            padding: 0 0 1px 1px;

            --size: 1.5rem;
            min-height: var(--size);
            height: var(--size);
            width: var(--size);

            i {
              font-size: var(--font-size-13);
            }

            &:hover {
              background-color: black;

              i {
                color: var(--t5e-color-text-default);
              }
            }
          }

          .button-config {
            color: var(--t5e-color-icon-button);
            background-color: transparent;

            &:hover {
              background-color: var(--t5e-color-hp-hd-dark);
            }
          }
        }

        .hd-row {
          flex: 1;
        }

        .max {
          color: var(--t5e-color-text-lighter);
        }

        .hit-die {
          position: relative;

          .label {
            justify-content: flex-start;
            transition: all var(--t5e-transition-default);

            &:hover {
              text-shadow: 0 0 5px var(--t5e-color-text-gold-emphasis);
            }

            &:focus,
            &:active {
              background-color: inherit;
              border: none;
              outline: none;
            }
          }

          .hd-label {
            color: var(--t5e-color-text-gold);
            font-weight: var(--t5e-font-weight-label);
          }

          input[type="text"] {
            height: 1.5rem;
            text-align: left;
            font-size: var(--font-size-16);
            padding-left: var(--t5e-size-2x);
            background-color: var(--t5e-color-hp-hd-dark);
            border: 2px solid var(--t5e-color-hp-hd-medium);
            caret-color: var(--t5e-color-text-default);
          }

          .button-config {
            position: absolute;
            right: 0;
          }
        }

        .exhaustion-bar {
          position: absolute;
          bottom: -2px;
          left: -2px;
          top: -2px;
          display: flex;
          flex-direction: row;
          align-items: center;
          justify-content: center;
          border-radius: 2px;
          border: 2px solid var(--t5e-color-gold);
          height: 1.75rem;
          width: max-content;
          background-color: var(--t5e-component-card-dark-darker);
          z-index: 1; // TODO: This is a hack

          .button {
            border-radius: 0;

            &.active {
              font-weight: var(--font-weight-bold);
              background-color: var(--t5e-color-palette-orange-40);
              color: var(--t5e-color-icon-default);
              text-shadow: 0 0 8px var(--t5e-color-palette-orange-100);
            }
          }
        }
      }

    }

    .character-name {
      flex-grow: 1;
      margin: 0 0 0 var(--header-padding);
      text-shadow: var(--header-shadow);
      line-height: 100%;
    }

    input[type="text"]:not(:disabled):not(.uninput).character-name {
      font: var(--t5e-font-title-large);
      flex: 1;
      margin: 0 var(--t5e-size-2x) var(--t5e-size-halfx) .5rem;
      padding: 9px 7px 7px;
      height: 2.75rem;
      border: 1px solid transparent;
      background-color: transparent;

      &:hover {
        background-color: rgba(0, 0, 0, 0.40);
      }

      H &:focus,
      &:active {
        border-color: var(--t5e-color-gold);
        background-color: rgba(0, 0, 0, 0.40);
      }

      &::selection {
        background-color: var(--t5e-theme-color-default);
      }
    }

    .character-subtitle {
      margin-left: var(--header-padding);
      flex: 1;
      text-shadow: var(--header-shadow);
      container-type: inline-size;
      container-name: subtitle;

      >span {
        flex: 0;
        text-wrap: nowrap;
      }

      >.divider-dot:last-child {
        display: none;
      }

      .dc {
        margin-left: 0.125rem;
      }

      button {
        padding: 0;
        border: none;
        background: none;

        &:hover,
        &:active,
        &:focus {
          background: none;
          border: none;

          span {
            text-shadow: 0 0 8px var(--t5e-color-text-gold);
          }
        }
      }

    }

    .xp-container {
      flex: 0 1 auto;
      margin: 0 0.5rem 2px 0;
      gap: var(--t5e-size-1x);
      display: flex;
      flex-direction: column;
      align-items: flex-end;

      .xp-bar {
        --meter-height: 0.625rem;
        background-color: var(--t5e-component-card-dark-darker);
        border-radius: 0.375rem;
        flex: auto;
        min-width: 7rem;
      }
    }

    .sheet-header-actions {
      margin-right: var(--t5e-size-3x);
      align-items: center;
      gap: var(--t5e-size-2x);

      .button-gold {
        border: 2px solid var(--t5e-color-palette-gold-62);
        border-radius: 3px;
        box-shadow: var(--header-shadow);

        i {
          color: var(--t5e-color-palette-gold-75);
        }

        &:hover {
          border-color: var(--t5e-color-palette-gold-89);

          i {
            color: var(--t5e-color-palette-gold-89);
          }
        }
      }
    }

    .show-xp {
      .character-details-name-row {
        margin-top: var(--t5e-size-1x);
        margin-bottom: 0;
      }

      .sheet-header-actions {
        align-items: flex-start;
        padding-top: var(--t5e-size-3x);
      }

      .character-details-subtitle-row {
        align-items: center;
      }

      .level-container {
        margin-top: var(--t5e-size-2x);
      }
    }

    .character-details-subtitle-row {
      container-type: inline-size;
    }

    .level-container {
      align-items: center;
      position: relative;
      margin-top: calc(var(--t5e-size-2x) + var(--t5e-size-halfx));

      .inspiration-badge {
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        display: flex;
        align-items: center;
        justify-content: center;

        &.stacked {
          left: -0.25rem;
        }
      }

      .inspiration {
        transition: all var(--t5e-transition-default);
        outline: none;

        &.button {
          width: 2.5rem;
          height: 2.5rem;
          display: flex;
          align-items: center;
          justify-content: center;

          &:not(.inspired) .level {
            color: var(--t5e-color-text-lighter);
          }

          &:hover,
          &:focus,
          &:active {
            background-color: var(--t5e-theme-color-highlight);
          }
        }

        &.single {
          background: url(../../modules/tidy5e-sheet/images/badge_inspiration_single.webp) center / contain no-repeat;

          &::before {
            transition: all var(--t5e-transition-default);
            // TODO: Fix weird hover behavior.
            box-shadow: 0 0 8px 3px var(--t5e-theme-color-highlight);
            display: block;
            width: 11px;
            height: 11px;
            background-color: var(--t5e-color-palette-white);
            border: 1px solid var(--t5e-theme-color-highlight);
            outline: none;
            transform: translate(-50%, -50%) rotate(45deg);
            z-index: 0;

            position: absolute;
            left: 50%;
            top: 50%;
          }

          &:hover,
          &:focus,
          &:active {
            background: url(../../modules/tidy5e-sheet/images/badge_inspiration_single.webp) center / contain no-repeat;
            filter: drop-shadow(0 0 6px var(--t5e-theme-color-highlight));
          }

          &.inspired::before {
            content: '';
          }


          &:hover::before {
            width: 12px;
            height: 12px;
            border-width: 1px;
            box-shadow: 0 0 12px 3px var(--t5e-theme-color-highlight);
          }
        }

        &.stacked {
          background: url(../../modules/tidy5e-sheet/images/badge_inspiration_stacked.webp) center / contain no-repeat;
          width: 2.75rem;
          height: 2.75rem;

          .level {
            margin-bottom: 1px;
          }

          .level-container {
            width: 19px;
            height: 19px;
            border-radius: 100%;
            border: 1px solid transparent;
            transition: all var(--t5e-transition-default);
            outline: none;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
          }

          &.inspired .level-container {
            box-shadow: 0 0 8px 3px var(--t5e-theme-color-highlight);
            content: '';
            background-color: var(--t5e-color-palette-white);
            border-color: var(--t5e-theme-color-highlight);

            .level {
              font-size: var(--font-size-16);
            }
          }

          &:hover,
          &:focus,
          &:active {
            background: url(../../modules/tidy5e-sheet/images/badge_inspiration_stacked.webp) center / contain no-repeat;
            filter: drop-shadow(0 0 6px var(--t5e-theme-color-highlight));
          }
        }
      }

    }

    .level-block {
      background: url(../../modules/tidy5e-sheet/images/badge_level_dark.webp) top center / auto no-repeat;
      background-size: contain;
      margin-left: 19px;
      margin-right: var(--t5e-size-2x);
      min-width: 4.75rem;
      min-height: 4.75rem;

      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;

      .level {
        margin: -0.25rem 0 -0.25rem 0;
      }

      .proficiency {
        .label {
          margin-right: var(--t5e-size-halfx);
        }
      }
    }

    .abilities-container {
      display: flex;
      flex-direction: row;
      position: relative;
      min-height: 106px;
      gap: var(--t5e-size-1x);
      padding: var(--t5e-size-2x) var(--t5e-size-3x) var(--t5e-size-halfx) 0;
      margin-left: var(--header-padding);
      align-items: flex-start;
      container-name: abilities;
      container-type: inline-size;


      &.abilities-overflow {
        gap: 0;
        max-width: 100%;

        .initiative {
          width: 52px;
          flex-grow: 0;
        }
      }

      >* {
        flex: 1 1 auto;
      }

      .bonus {
        margin-right: 2px;
        margin-left: 2px;
      }

      .save {
        margin-right: var(--t5e-size-1x);
      }

      .icon i {
        font-size: var(--font-size-11);
        color: var(--t5e-color-gold);
      }
    }

    .ac-container {
      text-align: center;
      align-items: center;
      max-width: 80px;

      .shield {
        background: url(../../modules/tidy5e-sheet/images/badge_ac_dark.webp) top center / auto no-repeat;
        background-size: contain;
        height: 68px;
        color: var(--t5e-color-text-light);
        font-weight: bold;
        font-size: 1.25rem;
        position: relative;
        width: 64px;

        display: flex;
        flex-direction: column;
        justify-content: center;
      }

      .ac-value {
        font-size: var(--font-size-28);
        letter-spacing: var(--t5e-font-letter-spacing-xlarge);
        margin: 6px 1px 0.75rem 0;
      }

      .ability-labels {
        margin-top: 0.1875rem;
        // width: 64px;

        .label {
          color: var(--t5e-color-text-lightest);
          text-transform: none;
        }

        .divider {
          background-color: var(--t5e-color-gold);
          opacity: 0.5;
          width: 100%;
          height: 1px;
          margin: 0.3125rem 0;
        }
      }

      .button-config {
        position: absolute;
        bottom: -14px;
        right: -8px;
      }
    }

    .ability {
      width: 64px;
      max-width: 72px;

      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;

      .button-config {
        position: absolute;
        bottom: -10px;
        right: -8px;
      }

      .bonus-container {
        background: url(../../modules/tidy5e-sheet/images/badge_ability_dark.webp) top center / auto no-repeat;
        background-size: contain;
        height: 72px;
        padding-top: var(--t5e-size-halfx);
        position: relative;
        text-align: center;
        width: 64px;

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;

        &.proficient {
          background-image: url(../../modules/tidy5e-sheet/images/badge_ability_dark_prof.webp);
        }

        // 👋 hightouch - POC styles for toggling visibility on mod/value and the score input
        &:has(.ability-score-input:focus) :where(.modifier, .value) {
          visibility: hidden;
        }

        .ability-score-input {
          position: absolute;
          inset: 1.75rem 0 0 0;
          height: calc(100% - 2.5rem);
          text-align: center;
          font: var(--t5e-font-data-xlarge);
          // font-size: 2rem;
          background: none;
          opacity: 0;

          &.editing-score {
            opacity: 1;
          }
        }

        .editing-score-label {
          font: var(--t5e-font-label-medium);
          position: absolute;
          top: calc(100% + 0.125rem);
        }
      }

      &:has(.button-config) {
        .ability-score {
          cursor: pointer;

          &:hover {
            color: var(--t5e-color-text-default);
            text-shadow: 0 0 6px var(--t5e-color-text-gold);
          }
        }
      }

      .ability-score {
        background: url(../../modules/tidy5e-sheet/images/badge_score_dark.webp) top center / auto no-repeat;
        background-size: contain;
        height: 2rem;
        margin-top: -0.75rem;
        position: relative;
        width: 1.75rem;

        display: flex;
        align-items: center;
        justify-content: center;

        pointer-events: initial;
      }

      .ability-save {
        border: none;
        gap: 1px;
        height: 1.75rem;
        padding: 0;
        align-items: center;
        text-shadow: var(--header-shadow);

        .icon {
          margin-bottom: var(--t5e-size-halfx);
        }

        i {
          font-size: var(--font-size-13);
          line-height: var(--font-size-13);
        }

        .modifier,
        .value {
          font-size: var(--font-size-14);
        }

        &:hover,
        &:focus,
        &:active {
          text-shadow: 0 0 6px var(--t5e-color-text-gold);
        }
      }
    }

    .ability-roll-button {
      margin-bottom: -2.25rem;
      padding: 0 .75rem 2rem;
    }

    .initiative-roll-button {
      margin-top: -2rem;
      padding: 1.825rem .5rem 0;
    }

    .ability-roll-button,
    .initiative-roll-button {
      color: var(--t5e-color-text-gold);
      font: var(--t5e-font-label-medium);
      height: auto;
      line-height: normal;
      min-height: auto;
      text-transform: uppercase;
      transition: all var(--t5e-transition-default);

      ~div span {
        transition: all var(--t5e-transition-default);
      }

      +div:not(:has(.ability-score-input)) {
        pointer-events: none;
      }

      &:hover,
      &:active,
      &:focus,
      &:focus-within {
        color: var(--t5e-color-text-gold-light);

        ~* {
          text-shadow: 0 0 6px var(--t5e-color-text-gold);
        }
      }

      &:active,
      &:focus,
      &:focus-within {
        border: none;
        background: none;
        outline: none;
        box-shadow: none;
      }
    }

    .initiative-container {
      width: 48px;
      max-width: 64px;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.325rem;

      .initiative.score {
        background: url(../../modules/tidy5e-sheet/images/badge_init_dark.webp) top center / auto no-repeat;
        background-size: contain;
        border-radius: 4px;
        height: 3.75rem;
        margin-top: 5px;
        padding-top: var(--t5e-size-halfx);
        width: 52px;
        position: relative;

        display: flex;
        align-items: center;
        flex-direction: column-reverse;
        flex-grow: 0;
        justify-content: center;

        .initiative-bonus {
          margin-right: 2px;
          margin-top: -5px;
          margin-bottom: -1px;
        }

        .modifier,
        .bonus {
          display: inline-block;
          font-weight: bold;
          font-size: 1.5rem;
        }

        .modifier {
          color: var(--t5e-color-text-lightest);
        }

        .button-config {
          position: absolute;
          bottom: -12px;
          right: -10px;
        }
      }
    }

    .concentration {
      width: 100%;
      overflow: hidden;
      display: flex;
      flex-direction: column-reverse;
      overflow: visible;

      span,
      i {
        transition: text-shadow var(--t5e-transition-default);
      }

      &:hover,
      &:focus,
      &:focus-within,
      &:active {
        text-shadow: 0 0 6px var(--t5e-color-text-gold);

        span {
          text-shadow: 0 0 6px var(--t5e-color-text-gold);
        }
      }

      .concentration-roll-button {
        height: auto;
        min-height: auto;
        margin-bottom: -2rem;
        padding-bottom: 2.125rem;
        margin-left: -0.5rem;
        margin-right: -0.5rem;

        .label {
          color: var(--t5e-color-text-gold);
          overflow: hidden;
          text-overflow: ellipsis;
          width: 100%;
          text-align: center;
          margin-top: var(--t5e-size-2x);
          text-transform: none;
        }

        &:focus,
        &:focus-within,
        &:active {
          background: transparent;
          outline: none;
          box-shadow: none;
        }
      }

      .concentration-bonus {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        gap: 1px;
        margin-top: 4px;

        >* {
          flex-grow: 0;
        }
      }

      i {
        margin-bottom: 1px;
        margin-right: 3px;
      }

      .modifier,
      .value {
        font-size: var(--font-size-14);
        line-height: var(--line-height-14);
      }

      .config-container {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 1rem;
        height: 1rem;
      }

      .button-config {
        display: inline-flex;
        margin-left: var(--t5e-size-1x);
        position: relative;
        right: auto;
        bottom: auto;
      }
    }
  }

  @container subtitle (width < 600) {
    .hide-under-600 {
      display: none;
    }
  }

  @container subtitle (width < 500) {
    .hide-under-500 {
      display: none;
    }
  }

  @container subtitle (width < 400) {
    .hide-under-400 {
      display: none;
    }
  }

  @container abilities (width < 600px) {}

  @container abilities (width < 540px) {
    .sheet-header {

      .abilities-container {

        .ac-container {
          .shield {
            height: 56px;
            width: 52px;

            .ac-value {
              font-size: 1.5rem;
              margin-top: var(--t5e-size-2x);
            }
          }

          .ability-labels {
            width: auto;
          }
        }

        .ability .bonus-container {
          width: 52px;
          height: 62px;

          .ability-roll-button {
            margin-bottom: -2.25rem;
          }

          .font-label-xlarge {
            font-size: 1.5rem;
          }

          .font-data-xlarge {
            font-size: 1.5rem;
          }
        }

        .initiative-container {
          gap: 0;

          .initiative.score {
            width: 48px;
            padding-top: 0;
            margin-top: 0;

            .font-label-xlarge {
              font-size: 1.5rem;
            }

            .font-data-xlarge {
              font-size: 1.5rem;
            }
          }

          .concentration-roll-button {
            margin-bottom: -1rem;
            padding-bottom: 1rem;
          }
        }
      }
    }
  }

  @container abilities (width < 500px) {
    .sheet-header {
      .abilities-container.abilities-overflow {
        gap: 0.25rem;

        .ability .bonus-container,
        .ability .bonus-container.proficient,
        .ac-container .shield,
        .initiative-container .initiative.score {
          background: none;
          width: auto;
        }

        .ac-container,
        .ability,
        .initiative-container {
          width: auto;
          flex: 1;
          background: rgba(0, 0, 0, 0.25);
        }

        .concentration {
          max-width: 48px;
          padding: 0 0.25rem;
        }
      }
    }
  }


  @container character-sheet (width > 800px) {
    --header-padding: 1.5rem;
  }

  @container character-sheet (width < 800px) {
    .sheet-header-content {
      // flex-direction: column-reverse;
      flex-wrap: wrap;
    }

    .hide-10 {
      display: none;
    }

  }

  &.theme-dark,
  .theme-dark {

    .sheet-body {
      background: url(../../modules/tidy5e-sheet/images/denim065.png) top center / auto repeat,
        var(--t5e-component-card-dark-darker);
      background-size: auto;

      &::before {
        content: none;
      }
    }

    .window-content {
      .sheet-header {
        border-bottom: 1px solid var(--t5e-color-palette-gold-45);
      }
    }
  }

  div.divider-dot {
    width: 3px;
    height: 3px;
    border-radius: 100%;
    background-color: var(--t5e-color-gold);
    opacity: 0.5;
    margin: 0 5px;
    flex: initial;
  }

  i.highlighted {
    color: var(--t5e-theme-color-highlight);

    &:hover {
      text-shadow: 0 0 4px oklch(from var(--t5e-theme-color-lighter) l c h / 0.5);
    }
  }

  .tidy-tab-contents {
    &.active {
      display: flex;
      flex-direction: column;
      gap: var(--t5e-size-3x);
    }

    &.attributes {

      flex-direction: row;
      gap: var(--t5e-size-6x);

      .left {
        flex: 0 0 12.5rem;
        gap: var(--t5e-size-4x);
      }

      .right {
        flex: 1;
        gap: var(--t5e-size-4x);

        container-type: inline-size;
        container-name: tab-right-column;
      }
    }
  }

  .sheet-footer {
    gap: var(--t5e-size-2x);

    >* {
      gap: var(--t5e-size-2x);
    }

    &.fixed {
      padding: var(--t5e-size-1x) 0 var(--t5e-size-3x) 0;
    }

    .sheet-footer-left {
      gap: var(--t5e-size-2x);
    }

    .sheet-footer-right {
      gap: var(--t5e-size-2x);
    }

    .footer-content-left {
      justify-content: flex-start;
    }

    .footer-content-right {
      justify-content: flex-end;
    }

    .spellcasting-class-card {
      border-radius: var(--t5e-size-1x);
      border: 1px solid var(--t5e-component-field-border);
      background: var(--t5e-component-field-background);
      padding: var(--t5e-size-2x) var(--t5e-size-3x);

      .primary-icon {
        padding-inline-start: var(--t5e-size-halfx);
      }

      &:not(.primary) .primary-icon {
        color: var(--t5e-color-text-lighter);
      }

      .info {
        justify-content: flex-end;
      }
    }
  }

  .inventory-footer {
    container-type: inline-size;
    container-name: inventory-footer;

    .attunement-tracker {
      height: var(--t5e-field-size-default);
      gap: var(--t5e-size-1x);

      span {
        padding-block-end: var(--t5e-size-1);
      }

      &.pill {
        background: var(--t5e-component-card-default);
        box-shadow: var(--t5e-drop-shadow-field);
      }

      &.attuned i:hover {
        text-shadow: 0 0 4px oklch(from var(--t5e-theme-color-lighter) l c h / 0.5);
      }

      input {
        flex: 0 1 fit-content;
        max-width: 2rem;
      }
    }

    .currency-container {
      gap: var(--t5e-size-2x);

      .denomination {
        text-transform: uppercase;
      }
    }
  }

  .spellbook-footer {
    margin-bottom: var(--t5e-size-3x);
    align-items: flex-start;

    .sheet-footer-left {
      padding-block-end: var(--t5e-size-3x);
    }

    .sheet-footer-right {
      padding-block-start: 0.375rem;
    }
  }

  @container inventory-footer (width < 35rem) {
    .currency-container {
      order: 1;
      flex: 1;
      min-width: fit-content;
      flex-direction: row;
    }

    .footer-content-left {
      order: 2;
      flex: 1;
    }

    .footer-content-right {
      order: 3;
    }
  }

  .tidy-tab.bastion {
    &.active {
      display: flex;
      flex-direction: column;
    }

    .name {
      margin-block-end: 0.75rem;

      input,
      .bastion-name {
        text-align: center;
        font-size: 1.25rem;
      }
    }

    >*:not(:first-child):not(:last-child) {
      margin-block-end: 1.25rem;
    }

    h3 {
      height: 1.1875rem;
      padding-bottom: 0.25rem;
      border-bottom: 0.0625rem solid var(--t5e-table-row-divider);
      display: flex;
      gap: 0.25rem;
      font-size: 0.875rem;
      font-style: normal;
      font-weight: 500;
      line-height: 0.875rem;
      color: var(--t5e-color-text-lighter);
      margin-block-end: 0.75rem;

      .counter {
        padding-left: 0.25rem;

        color: var(--t5e-color-text-lightest);

        .value,
        .max {
          color: var(--t5e-color-text-lighter);
        }
      }
    }

    .highlight {
      background: var(--t5e-component-field-background);
      outline: var(--occupant-hightlight-width) solid var(--t5e-theme-color-lighter);
    }

    /* Facilities */

    .facility-panels {
      display: grid;
      grid-template-areas: 'special basic';
      grid-template-columns: 1fr 1fr;
      column-gap: 2rem;

      .facilities {
        &.special {
          grid-area: special;
        }

        &.basic {
          grid-area: basic;
        }

        .occupant-dropzone {
          background: var(--t5e-component-field-background);
          border-radius: 0.125rem;
          outline: 0.125rem solid var(--t5e-color-gold);

          >* {
            pointer-events: none;
          }
        }
      }
    }

    .facilities .facility-list {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }

    .facility:not(.empty) {
      border: 0.0625rem solid var(--t5e-color-gold);
      border-radius: 0.1875rem;
      padding: 0.75rem 0.5rem;
      background: linear-gradient(145deg,
          rgba(248, 244, 241, 0.85) 10%,
          rgba(248, 244, 241, 0.1) 160%),
        var(--underlay) 40%, #f8f4f1;
      background-blend-mode: normal, multiply;
      background-size: cover, cover;
      box-shadow: var(--t5e-drop-shadow-card);

      &.basic {
        background-blend-mode: normal, luminosity;
      }

      .sub-header {
        color: var(--t5e-color-text-lightest);
        margin-block-end: 0.25rem;
        font-weight: 500;
      }

      &.no-events {
        pointer-events: none;
      }
    }

    .facility.disabled {
      filter: grayscale(1);
    }

    .facility.empty a {
      border-radius: var(--t5e-component-card-radius);
      border: 0.0625rem dashed var(--t5e-component-field-border);
      height: 3rem;
      gap: 0.25rem;
      display: flex;
      justify-content: center;
      align-items: center;

      transition: all 0.3s ease;

      &:hover {
        border-style: solid;
        background: var(--t5e-component-field-background);
        border-color: var(--t5e-color-gold);
      }
    }

    .facility-menu {
      transition: all 0.3s ease;
      padding: 0.5rem 0.75rem;
    }

    /* Rosters */

    .roster {
      ul {
        display: flex;
        gap: 0.5rem;
        margin-inline: var(--occupant-hightlight-width);

        li {
          border-radius: 0.25rem;
          width: var(--roster-member-size, 3rem);
          height: var(--roster-member-size, 3rem);

          a {
            display: flex;
            align-items: center;
            justify-content: center;
          }
        }
      }

      img {
        width: var(--roster-member-size, 3rem);
        height: var(--roster-member-size, 3rem);
        border-radius: 0.25rem;
        object-fit: cover;
      }

      .broken-link-icon {
        font-size: calc(var(--roster-member-size, 3rem) * 0.5);
        // color: var(--t5e-warning-accent-color);
        display: inline-flex;
        align-self: center;
        justify-content: center;
      }
    }

    .facility-header {
      display: flex;
      gap: 0.125rem;
      margin-block-end: 1rem;

      .facility-image,
      .facility-image svg {
        --img-size: 2rem;
        --icon-fill: var(--t5e-color-text-lightest);
        width: var(--img-size);
        height: var(--img-size);
        margin-inline-end: 0.25rem;
        border-radius: 0.1875rem;
      }

      .facility-header-details {
        display: flex;
        gap: 0.125rem;
        flex: 1;

        &:hover .title {
          color: fuchsia;
        }
      }

      .title-and-subtitle {
        display: flex;
        flex-direction: column;

        flex: 1;
      }

      .title {
        font-size: 0.9375rem;
        transition: all 0.3s ease;
        font-weight: 500;
      }

      .subtitle {
        font-size: 0.8125rem;
        color: var(--t5e-color-text-lightest);
      }
    }

    /* Facility Occupant Slots */

    .slots {
      display: flex;
      flex-direction: row;
      gap: 0.25rem;
      flex-wrap: wrap;
      margin-block-end: 0.75rem;
    }

    .slot.occupant-slot {
      --img-size: 1.5rem;
      width: var(--img-size);
      height: var(--img-size);
      border-radius: 0.125rem;
      display: inline-flex;
      position: relative;

      a {
        display: flex;
        align-items: center;
        justify-content: center;
      }

      img {
        object-fit: cover;
        width: var(--img-size);
        height: var(--img-size);
      }

      .broken-link-icon {
        font-size: calc(var(--img-size) * 0.75);
        color: var(--t5e-warning-accent-color);
        display: inline-flex;
        align-self: center;
        justify-content: center;
      }

      li {
        border-radius: 0.125rem;
      }

      &.empty {
        width: var(--img-size);
        height: var(--img-size);
        border-radius: 0.125rem;
        border: 0.0625rem dashed var(--t5e-color-text-lightest);
        color: var(--t5e-color-text-lightest);
        font-size: 0.6875rem;

        &:hover {
          border-style: solid;
        }

        a {
          display: flex;
          justify-content: center;
          align-items: center;
          width: var(--img-size);
          height: var(--img-size);
        }
      }
    }

    /* Occupant Menu */

    .occupant-with-menu {
      position: relative;

      a {
        position: absolute;
        inset: 0;
      }

      &.unlocked:not(.empty):hover {
        background-color: var(--t5e-component-field-background);
        border-color: var(--t5e-theme-color-lighter);

        img {
          display: none;
        }

        .occupant-menu-icon {
          opacity: 1;
        }
      }
    }

    .occupant-menu-icon {
      opacity: 0;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: var(--t5e-color-gold);
      text-shadow: 0px 0px 0.5rem black;
      font-size: 1rem;
    }

    .roster .occupant-menu-icon {
      font-size: 1.125rem;
    }

    /* Order Progress Meter */

    .crafting-item {
      --img-size: 1.5rem;
      width: var(--img-size);
      height: var(--img-size);
      margin-inline-end: 0.125rem;
      border-radius: 0.1875rem;
    }

    .craft-and-meter {
      display: flex;
      gap: 0.125rem;

      .facility-progress {
        --meter-height: 2rem;
        flex: 1;
        border-color: var(--t5e-color-gold);

        .label {
          justify-content: space-between;

          .order,
          i {
            font-size: var(--font-size-14);
          }
        }
      }
    }

    /* Description */

    .description {
      position: relative;
      flex: 1;
      display: flex;
      flex-direction: column;

      &:hover .editor .editor-edit {
        display: block;
        padding: 0;
        border: none;
      }

      .editor {
        flex: 1;

        .editor-content {
          overflow-y: visible;
        }
      }

      .editor .editor-edit {
        &:not(:focus-visible) {
          box-shadow: none;
        }

        // &:focus-visible {
        //   box-shadow: var(--t5e-focus-visible-box-shadow);
        // }
      }

      .editor-container {
        min-height: 31.25rem;
        overflow-y: hidden;

        .ProseMirror {
          overflow-y: auto;
        }
      }
    }
  }

  &.theme-dark {
    --t5e-color-gold: var(--t5e-color-palette-gold-45);

    .tidy-tab.bastion {
      .facility:not(.empty) {
        background: linear-gradient(145deg,
            rgba(27, 29, 35, 0.95) 10%,
            rgba(27, 29, 35, 0.1) 170%),
          var(--underlay) 40%, #2c3e50;
        background-blend-mode: normal, normal;
        background-size: cover, cover;

        &.basic {
          background-blend-mode: normal, luminosity;
        }

        .facility-header :is(.facility-image, .facility-image svg) {
          --icon-fill: var(--t5e-component-field-background);
        }
      }
    }
  }

  // 👋 hightouch - I am once again putting prototypal CSS in weird places. ~ kgar
  :where(.favorites) {
    .list-label {
      border-bottom: 1px solid var(--t5e-table-row-divider);
      padding-block-end: var(--t5e-size-1x);
    }

    .favorite {
      display: flex;
      flex-direction: row;
      padding-block-start: var(--t5e-size-1x);
      padding-block-end: var(--t5e-size-1x);
      border-bottom: 1px solid var(--t5e-table-row-divider);

      .effect-use-icon {
        border-radius: 0.125rem;
        border: 1px solid var(--t5e-color-gold);
        width: 1.75rem;
        height: 1.75rem;
      }

      &:hover,
      &:focus {

        .item-use-button,
        &:not(.suppressed) .effect-use-icon {
          box-shadow: 0 0 6px var(--t5e-color-text-gold-emphasis);
        }

        input.uses-value {
          border-color: transparent; //var(--t5e-component-field-border);
          background-color: var(--t5e-component-field-background-hover-emphasis);
          box-shadow: 4px 0 0 0 var(--t5e-component-field-background-hover-emphasis);
        }
      }

      >div {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: var(--t5e-field-size-default);
        overflow-x: hidden;

        &.item-name-container {
          align-items: flex-start;
          margin-inline-start: var(--t5e-size-2x);
          margin-inline-end: var(--t5e-size-2x);
          flex: 4;
        }

        &:last-of-type {
          flex: 2;
        }
      }

      .ability {
        text-transform: uppercase;
      }

      .inline-uses {
        display: flex;
        align-items: center;

        .divider {
          flex: 0 0 auto;
        }

        .uses-value {
          flex: 1;
          text-align: right;
        }

        .uses-max {
          flex: 1;
        }
      }

      .stacked {
        flex-direction: column;
        flex-wrap: nowrap;

        span {
          display: flex;
          flex: 1;
          text-wrap: nowrap;
          text-overflow: ellipsis;
          overflow-x: hidden;
        }
      }

      .favorite-button {
        display: flex;
        flex: 5;
        padding-inline-start: 0;
        padding-inline-end: 0;
        gap: var(--t5e-size-2x);
        min-width: 0;
        height: var(--t5e-field-size-default);

        .item-use-button {
          margin: 1px 0 0;
          display: flex;
          align-items: center;
          justify-content: center;

          img {
            width: 1.625rem;
            height: 1.625rem;
            overflow: hidden;
          }

          img,
          i {
            transition: all var(--t5e-transition-default);
          }
        }

        &:hover,
        &:focus,
        &:active {
          text-shadow: none;

          .item-use-button {
            img {
              opacity: 0;
            }

            // TODO: hightouch, this was one of the few ways to make an SVG icon go hidden. It doesn't animate, well (or possibly at all).
            dnd5e-icon {
              --icon-fill: transparent;
            }

            i {
              display: flex;
              opacity: 1;
              color: var(--t5e-color-text-gold-emphasis);
            }

            background: transparent;
          }
        }

        .item-name-container {
          display: flex;
          flex: 4;
          overflow-x: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
          margin-inline-end: 0;
        }

        .effect-toggle {
          flex: 2;
        }
      }

      &:has(input[type="checkbox"]:not(:checked)) {
        .favorite-effect .item-name-container {
          color: var(--t5e-color-text-lighter);
        }

        .effect-use-icon img {
          opacity: 0.5;
        }
      }
    }
  }
}