.tidy5e-sheet.application:where(.quadrone.character) {
  --sidebar-expanded-width: 12.5rem; // I just picked a value for now while prototyping.

  .window-content {
    display: flex;
    flex-direction: column;

    .sheet-header {
      // All of the sheet header stuff goes in here
      // kgar: I'm thinking CSS Grid with Grid Areas; these areas will have Sheet Part attributes to help mods to target the area where they want to add something

      // TODO: Vitals should be outside of grid. Everything to the right of it needs to scale on its own.
      display: grid;
      grid-template-areas:
        'vitals   characterName  sheetHeaderButtons  levelBadgeContainer'
        'vitals   subtitle       subtitle            levelBadgeContainer'
        'vitals   abilities      abilities           abilities'
        'tabsRow  tabsRow        tabsRow             tabsRow';
      grid-template-columns: auto 1fr auto auto;
      grid-template-rows: min-content min-content min-content min-content;

      .character-vitals-container {
        grid-area: vitals;
      }

      .character-name {
        grid-area: characterName;
      }
      
      .character-subtitle {
        grid-area: subtitle;
      }

      .sheet-header-actions {
        grid-area: sheetHeaderButtons;
      }

      .level-block {
        grid-area: levelBadgeContainer;

        .level-badge {
        }

        .inspiration-tracker {
        }
      }

      .abilities-container {
        grid-area: abilities;
      }

      .tabs-row {
        grid-area: tabsRow;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;

        > .sidebar-toggle {
          position: absolute;
          left: 0;
          padding: 0;
          column-gap: var(--t5e-size-1);

          > i {
            color: var(--t5e-color-icon-diminished);
          }

          &:hover > i {
            color: var(--t5e-color-icon-default);
          }
        }

        > .tidy-tabs {
        }
      }
    }

    .main-content {
      flex: 1;
      display: flex;
      flex-direction: row;
      overflow-x: hidden;
      overflow-y: auto;

      > .sidebar {
        flex-basis: var(--sidebar-expanded-width);
        transition: margin var(--t5e-transition-default);
        margin-inline-end: 0;
        margin-inline-start: calc(var(--sidebar-expanded-width) * -1);
        overflow-x: clip;
        &.expanded {
          margin-inline-start: 0;
          margin-inline-end: var(--t5e-size-6x);
          max-width: var(--sidebar-expanded-width);
        }
      }

      > .tidy-tab {
        flex: 1;
        container-type: inline-size;
      }
    }
  }
}
